/*
 * Veritas Information Classifier (VIC)
 * APIs
 *
 * OpenAPI spec version: Resource Specific
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.TagPropertyAllowedValue;
import java.util.ArrayList;
import java.util.List;

/**
 * Definition of a property that a tag may be mapped to.  Includes allowed values and an optional default value.  Typically used by user interfaces to present valid property values to a user.
 */
@ApiModel(description = "Definition of a property that a tag may be mapped to.  Includes allowed values and an optional default value.  Typically used by user interfaces to present valid property values to a user.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-12T23:02:37.653Z")
public class TagPropertyDefinition {
  @SerializedName("name")
  private String name = null;

  @SerializedName("values")
  private List<TagPropertyAllowedValue> values = new ArrayList<TagPropertyAllowedValue>();

  @SerializedName("defaultValue")
  private String defaultValue = null;

  public TagPropertyDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of a property, for example indexProperty or retentionCategory.
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Name of a property, for example indexProperty or retentionCategory.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TagPropertyDefinition values(List<TagPropertyAllowedValue> values) {
    this.values = values;
    return this;
  }

  public TagPropertyDefinition addValuesItem(TagPropertyAllowedValue valuesItem) {
    this.values.add(valuesItem);
    return this;
  }

   /**
   * Allowed values for a property.  For example indexProperty may have allowed values evtag.category, evtag.inclusion etc.
   * @return values
  **/
  @ApiModelProperty(example = "null", value = "Allowed values for a property.  For example indexProperty may have allowed values evtag.category, evtag.inclusion etc.")
  public List<TagPropertyAllowedValue> getValues() {
    return values;
  }

  public void setValues(List<TagPropertyAllowedValue> values) {
    this.values = values;
  }

  public TagPropertyDefinition defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Optional default value for a property.  If not specified, the property's default value is null / undefined.
   * @return defaultValue
  **/
  @ApiModelProperty(example = "null", value = "Optional default value for a property.  If not specified, the property's default value is null / undefined.")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TagPropertyDefinition tagPropertyDefinition = (TagPropertyDefinition) o;
    return Objects.equals(this.name, tagPropertyDefinition.name) &&
        Objects.equals(this.values, tagPropertyDefinition.values) &&
        Objects.equals(this.defaultValue, tagPropertyDefinition.defaultValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, values, defaultValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TagPropertyDefinition {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

