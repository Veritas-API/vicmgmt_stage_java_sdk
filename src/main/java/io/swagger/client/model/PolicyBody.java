/*
 * Veritas Information Classifier (VIC)
 * APIs
 *
 * OpenAPI spec version: Resource Specific
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.OperatorNode;

/**
 * PolicyBody
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-12T23:02:37.653Z")
public class PolicyBody {
  @SerializedName("conditionsTree")
  private OperatorNode conditionsTree = null;

  public PolicyBody conditionsTree(OperatorNode conditionsTree) {
    this.conditionsTree = conditionsTree;
    return this;
  }

   /**
   * A tree of conditions that form the structure of the policy.  Leaf nodes are always conditions.  Non-leaf nodes are always operators that can be used to combine the conditions.
   * @return conditionsTree
  **/
  @ApiModelProperty(example = "null", value = "A tree of conditions that form the structure of the policy.  Leaf nodes are always conditions.  Non-leaf nodes are always operators that can be used to combine the conditions.")
  public OperatorNode getConditionsTree() {
    return conditionsTree;
  }

  public void setConditionsTree(OperatorNode conditionsTree) {
    this.conditionsTree = conditionsTree;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyBody policyBody = (PolicyBody) o;
    return Objects.equals(this.conditionsTree, policyBody.conditionsTree);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditionsTree);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyBody {\n");
    
    sb.append("    conditionsTree: ").append(toIndentedString(conditionsTree)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

